<UserControl
    x:Class="Reddit.CommentView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:Reddit"
    xmlns:md="using:mdblock"
    xmlns:tree="using:TreeViewControl"
    xmlns:acc="using:account"
    xmlns:converters="using:converters"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d"
    d:DesignHeight="300"
    d:DesignWidth="400">

    <UserControl.Resources>
        <local:DepthToColor x:Key="itemBrushConv"/>
        <converters:downvotechecked x:Key="downvoteconverter"/>
        <converters:upvotechecked x:Key="upvoteconverter"/>

        <converters:InverseBool x:Key="inverseBoolConverter"/>
        <DataTemplate x:DataType="tree:TreeNode" x:Name="commentTemplate" >
            <Grid Tag="{x:Bind}"  Margin="{x:Bind Depth, Converter={StaticResource IntToIndConverter}}" HorizontalAlignment="Stretch" Background="{x:Bind Depth, Converter={StaticResource itemBrushConv}}">
                <Grid.RowDefinitions>
                    <RowDefinition Height="32"/>
                    <RowDefinition/>
                    <RowDefinition/>
                    <RowDefinition/>
                </Grid.RowDefinitions>
                <StackPanel Grid.Row="0" Orientation="Horizontal">
                    <HyperlinkButton x:Name="user" Content="{x:Bind ((acc:CommentUWPitem)Data).author, FallbackValue=username}" FontSize="16" VerticalAlignment="Bottom"/>
                    <ContentPresenter VerticalAlignment="Center" VerticalContentAlignment="Center" Content="{x:Bind ((acc:CommentUWPitem)Data).DistinguishedAuthorType, Converter={StaticResource DistinguishedOPBadge}}"/>
                    <TextBlock FontSize="16" VerticalAlignment="Center"  Margin="4,0,0,0">
                        <Run Text="{x:Bind ((acc:CommentUWPitem)Data).ScoreText, Mode=OneWay}"/> • <Run Text="{x:Bind ((acc:CommentUWPitem)Data).CreatedString}"/>
                    </TextBlock>
                </StackPanel>
                <!--<RichTextBlock Name="comment" Grid.Row="1" common:Properties.Html="{x:Bind ((acc:CommentUWPitem)Data).htmltext}"/>-->
                <RichTextBlock Grid.Row="1" md:mdRichProperties.MDElements="{x:Bind ((acc:CommentUWPitem)Data).mdElements}"/>
                <!--<md:mdRichblock Grid.Row="1" Markdown="{x:Bind ((acc:CommentUWPitem)Data).markdowntext}"/>-->
                <CommandBar HorizontalAlignment="Stretch" Grid.Row="2" Template="{StaticResource leftAlignNoContentCommandBar}" OverflowButtonVisibility="Collapsed" IsDynamicOverflowEnabled="True"  >
                    <local:AppBarToggleColoredButton CheckedBrush="#FF8b60" IsThreeState="False"  Label="Upvote" IsChecked="{x:Bind ((acc:CommentUWPitem)Data).Liked, Converter={StaticResource upvoteconverter}, Mode=OneWay}" Command="{x:Bind ((acc:CommentUWPitem)Data).changeupvote}">
                        <AppBarToggleButton.Icon>
                            <FontIcon Glyph="&#xE70E;" FontWeight="ExtraBold"/>
                        </AppBarToggleButton.Icon>
                    </local:AppBarToggleColoredButton>
                    <local:AppBarToggleColoredButton CheckedBrush="#9494FF" IsThreeState="False" Label="Downvote" IsChecked="{x:Bind ((acc:CommentUWPitem)Data).Liked, Converter={StaticResource downvoteconverter}, Mode=OneWay}" Command="{x:Bind ((acc:CommentUWPitem)Data).changedownvote}">
                        <AppBarToggleButton.Icon>
                            <FontIcon Glyph="&#xE70D;" FontWeight="ExtraBold"/>
                        </AppBarToggleButton.Icon>
                    </local:AppBarToggleColoredButton>
                    <AppBarToggleButton Icon="Save" Label="Save" IsChecked="{x:Bind ((acc:CommentUWPitem)Data).saved, Mode=TwoWay}" IsThreeState="False"/>
                    <AppBarButton Icon="Important" Label="Report">
                        <AppBarButton.Flyout>
                            <local:reportFlyout  reasonsVec="{StaticResource reportReasonsResource}" isComment="True"/>
                        </AppBarButton.Flyout>
                    </AppBarButton>
                    <AppBarButton Icon="Edit" Label="Edit" Visibility="{x:Bind ((acc:CommentUWPitem)Data).isMine}"/>
                    <AppBarButton Icon="Share" Label="Share"/>
                    <AppBarToggleButton Icon="HideBcc" Label="Hide Replies" Visibility="{x:Bind HasItems}" IsChecked="{x:Bind IsExpanded, Converter={StaticResource inverseBoolConverter}, Mode=TwoWay}"/>
                    <AppBarToggleButton Label="Reply" Name="replyButton" Click="replyButton_Click" IsThreeState="False">
                        <AppBarToggleButton.Icon>
                            <FontIcon Glyph="&#xE97A;" FontWeight="ExtraBold"/>
                        </AppBarToggleButton.Icon>
                    </AppBarToggleButton>

                </CommandBar>

            </Grid>

        </DataTemplate>
        <DataTemplate x:DataType="tree:TreeNode" x:Name="loadmorebutton">
            <Border Background="{ThemeResource ApplicationPageBackgroundThemeBrush}" Padding="0" HorizontalAlignment="Stretch" Margin="{x:Bind Depth, Converter={StaticResource IntToIndConverter}}" Height="45">
                <HyperlinkButton Padding="0"  Click="{x:Bind ((acc:moreComments)Data).clickedFunc}" HorizontalAlignment="Stretch" >
                    <TextBlock>
                    Load More Comments (<Run Text="{x:Bind ((acc:moreComments)Data).count}"/>)
                    </TextBlock>
                </HyperlinkButton>
            </Border>
           
        </DataTemplate>
    </UserControl.Resources>

    <tree:TreeView  x:Name="commentTree" x:FieldModifier="internal" SelectionMode="None" Loaded="commentTree_Loaded" ChoosingItemContainer="commentTree_ChoosingItemContainer" HeaderTemplate="{StaticResource listSelfPost}">
        <tree:TreeView.Template>
            <ControlTemplate TargetType="tree:TreeView">
                <Grid Name="rootygrid" BorderBrush="{TemplateBinding BorderBrush}"  Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}">
                    <ScrollViewer x:Name="ScrollViewer" 
                            TabNavigation="{TemplateBinding TabNavigation}"
                            HorizontalScrollMode="{TemplateBinding ScrollViewer.HorizontalScrollMode}"
                            HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"
                            IsHorizontalScrollChainingEnabled="{TemplateBinding ScrollViewer.IsHorizontalScrollChainingEnabled}"
                            VerticalScrollMode="{TemplateBinding ScrollViewer.VerticalScrollMode}"
                            VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}"
                            IsVerticalScrollChainingEnabled="{TemplateBinding ScrollViewer.IsVerticalScrollChainingEnabled}"
                            IsHorizontalRailEnabled="{TemplateBinding ScrollViewer.IsHorizontalRailEnabled}"
                            IsVerticalRailEnabled="{TemplateBinding ScrollViewer.IsVerticalRailEnabled}"
                            ZoomMode="{TemplateBinding ScrollViewer.ZoomMode}"
                            IsDeferredScrollingEnabled="{TemplateBinding ScrollViewer.IsDeferredScrollingEnabled}"
                            BringIntoViewOnFocusChange="{TemplateBinding ScrollViewer.BringIntoViewOnFocusChange}"
                            AutomationProperties.AccessibilityView="Raw">
                        <ItemsPresenter Header="{TemplateBinding Header}"
                                HeaderTemplate="{TemplateBinding HeaderTemplate}"
                                HeaderTransitions="{TemplateBinding HeaderTransitions}"
                                Footer="{TemplateBinding Footer}"
                                FooterTemplate="{TemplateBinding FooterTemplate}"
                                FooterTransitions="{TemplateBinding FooterTransitions}"
                                Padding="{TemplateBinding Padding}" />
                    </ScrollViewer>
                </Grid>
            </ControlTemplate>
        </tree:TreeView.Template>
        <tree:TreeView.ItemContainerStyle>
            <Style TargetType="tree:TreeViewItem">
                <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
            </Style>
        </tree:TreeView.ItemContainerStyle>
    </tree:TreeView>


</UserControl>
