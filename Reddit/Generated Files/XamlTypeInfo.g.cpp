//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
#include "pch.h"
#include "XamlTypeInfo.g.h"

#include "CommentView.xaml.h"
#include "CommentViewPage.xaml.h"
#include "MessagesViewer.xaml.h"
#include "MyResources.xaml.h"
#include "App.xaml.h"
#include "ReplyBox.xaml.h"
#include "rootWindowGrid.xaml.h"
#include "SubRedditViewPage.xaml.h"
#include "TestPage.xaml.h"
#include "UserPage.xaml.h"
#include "XamlBindingInfo.g.hpp"
#include "CommentView.g.hpp"
#include "CommentViewPage.g.hpp"
#include "MessagesViewer.g.hpp"
#include "MyResources.g.hpp"
#include "App.g.hpp"
#include "ReplyBox.g.hpp"
#include "rootWindowGrid.g.hpp"
#include "SubRedditViewPage.g.hpp"
#include "TestPage.g.hpp"
#include "UserPage.g.hpp"

template<typename T>
::Platform::Object^ ActivateType()
{
    return ref new T;
}

template<typename TInstance, typename TItem>
void CollectionAdd(::Platform::Object^ instance, ::Platform::Object^ item)
{
    safe_cast<TInstance^>(instance)->Append((TItem)item);
}

template<typename TInstance, typename TKey, typename TItem>
void DictionaryAdd(::Platform::Object^ instance, ::Platform::Object^ key, ::Platform::Object^ item)
{
    safe_cast<TInstance^>(instance)->Insert((TKey)key, (TItem)item);
}

template<typename T>
::Platform::Object^ FromStringConverter(::XamlTypeInfo::InfoProvider::XamlUserType^ userType, ::Platform::String^ input)
{
    return ref new ::Platform::Box<T>((T)userType->CreateEnumUIntFromString(input));
}

template<typename TDeclaringType, typename TargetType>
::Platform::Object^ GetAttachableMember_MDElements(::Platform::Object^ instance)
{
    return TDeclaringType::GetMDElements(safe_cast<TargetType^>(instance));
}

template<typename TDeclaringType, typename TargetType>
::Platform::Object^ GetAttachableMember_MD(::Platform::Object^ instance)
{
    return TDeclaringType::GetMD(safe_cast<TargetType^>(instance));
}

template<typename TDeclaringType, typename TValue>
::Platform::Object^ GetValueTypeMember_sort(::Platform::Object^ instance)
{
    return ref new ::Platform::Box<TValue>(safe_cast<TDeclaringType^>(instance)->sort);
}

template<typename TDeclaringType, typename TValue>
::Platform::Object^ GetValueTypeMember_subInfo(::Platform::Object^ instance)
{
    return ref new ::Platform::Box<TValue>(safe_cast<TDeclaringType^>(instance)->subInfo);
}

template<typename TDeclaringType, typename TValue>
::Platform::Object^ GetValueTypeMember_HasAd(::Platform::Object^ instance)
{
    return ref new ::Platform::Box<TValue>(safe_cast<TDeclaringType^>(instance)->HasAd);
}

template<typename TDeclaringType, typename TValue>
::Platform::Object^ GetValueTypeMember_IsSuspended(::Platform::Object^ instance)
{
    return ref new ::Platform::Box<TValue>(safe_cast<TDeclaringType^>(instance)->IsSuspended);
}

template<typename TDeclaringType, typename TValue>
::Platform::Object^ GetValueTypeMember_AutoRefreshIntervalInSeconds(::Platform::Object^ instance)
{
    return ref new ::Platform::Box<TValue>(safe_cast<TDeclaringType^>(instance)->AutoRefreshIntervalInSeconds);
}

template<typename TDeclaringType, typename TValue>
::Platform::Object^ GetValueTypeMember_IsAutoRefreshEnabled(::Platform::Object^ instance)
{
    return ref new ::Platform::Box<TValue>(safe_cast<TDeclaringType^>(instance)->IsAutoRefreshEnabled);
}

template<typename TDeclaringType, typename TValue>
::Platform::Object^ GetValueTypeMember_IsEngaged(::Platform::Object^ instance)
{
    return ref new ::Platform::Box<TValue>(safe_cast<TDeclaringType^>(instance)->IsEngaged);
}

template<typename TDeclaringType, typename TValue>
::Platform::Object^ GetValueTypeMember_IsExpanded(::Platform::Object^ instance)
{
    return ref new ::Platform::Box<TValue>(safe_cast<TDeclaringType^>(instance)->IsExpanded);
}

template<typename TDeclaringType, typename TValue>
::Platform::Object^ GetValueTypeMember_contentLoaded(::Platform::Object^ instance)
{
    return ref new ::Platform::Box<TValue>(safe_cast<TDeclaringType^>(instance)->contentLoaded);
}

template<typename TDeclaringType, typename TValue>
::Platform::Object^ GetValueTypeMember_Has_mail(::Platform::Object^ instance)
{
    return ref new ::Platform::Box<TValue>(safe_cast<TDeclaringType^>(instance)->Has_mail);
}

template<typename TDeclaringType, typename TValue>
::Platform::Object^ GetValueTypeMember_Subscribed(::Platform::Object^ instance)
{
    return ref new ::Platform::Box<TValue>(safe_cast<TDeclaringType^>(instance)->Subscribed);
}

template<typename TDeclaringType, typename TValue>
::Platform::Object^ GetValueTypeMember_Range(::Platform::Object^ instance)
{
    return ref new ::Platform::Box<TValue>(safe_cast<TDeclaringType^>(instance)->Range);
}

template<typename TDeclaringType, typename TValue>
::Platform::Object^ GetValueTypeMember_Sort(::Platform::Object^ instance)
{
    return ref new ::Platform::Box<TValue>(safe_cast<TDeclaringType^>(instance)->Sort);
}

template<typename TDeclaringType, typename TValue>
::Platform::Object^ GetValueTypeMember_viewMode(::Platform::Object^ instance)
{
    return ref new ::Platform::Box<TValue>(safe_cast<TDeclaringType^>(instance)->viewMode);
}

template<typename TDeclaringType, typename TValue>
::Platform::Object^ GetValueTypeMember_NSFW(::Platform::Object^ instance)
{
    return ref new ::Platform::Box<TValue>(safe_cast<TDeclaringType^>(instance)->NSFW);
}

template<typename TDeclaringType, typename TValue>
::Platform::Object^ GetValueTypeMember_num_comments(::Platform::Object^ instance)
{
    return ref new ::Platform::Box<TValue>(safe_cast<TDeclaringType^>(instance)->num_comments);
}

template<typename TDeclaringType, typename TValue>
::Platform::Object^ GetValueTypeMember_self(::Platform::Object^ instance)
{
    return ref new ::Platform::Box<TValue>(safe_cast<TDeclaringType^>(instance)->self);
}

template<typename TDeclaringType, typename TValue>
::Platform::Object^ GetValueTypeMember_contentType(::Platform::Object^ instance)
{
    return ref new ::Platform::Box<TValue>(safe_cast<TDeclaringType^>(instance)->contentType);
}

template<typename TDeclaringType, typename TValue>
::Platform::Object^ GetValueTypeMember_Liked(::Platform::Object^ instance)
{
    return ref new ::Platform::Box<TValue>(safe_cast<TDeclaringType^>(instance)->Liked);
}

template<typename TDeclaringType, typename TValue>
::Platform::Object^ GetValueTypeMember_score(::Platform::Object^ instance)
{
    return ref new ::Platform::Box<TValue>(safe_cast<TDeclaringType^>(instance)->score);
}

template<typename TDeclaringType, typename TValue>
::Platform::Object^ GetValueTypeMember_saved(::Platform::Object^ instance)
{
    return ref new ::Platform::Box<TValue>(safe_cast<TDeclaringType^>(instance)->saved);
}

template<typename TDeclaringType, typename TValue>
::Platform::Object^ GetValueTypeMember_Golds(::Platform::Object^ instance)
{
    return ref new ::Platform::Box<TValue>(safe_cast<TDeclaringType^>(instance)->Golds);
}

template<typename TDeclaringType, typename TValue>
::Platform::Object^ GetValueTypeMember_DistinguishedAuthorType(::Platform::Object^ instance)
{
    return ref new ::Platform::Box<TValue>(safe_cast<TDeclaringType^>(instance)->DistinguishedAuthorType);
}

template<typename TDeclaringType, typename TValue>
::Platform::Object^ GetValueTypeMember_rType(::Platform::Object^ instance)
{
    return ref new ::Platform::Box<TValue>(safe_cast<TDeclaringType^>(instance)->rType);
}

template<typename TDeclaringType, typename TValue>
::Platform::Object^ GetValueTypeMember_SidebarUseCSS(::Platform::Object^ instance)
{
    return ref new ::Platform::Box<TValue>(safe_cast<TDeclaringType^>(instance)->SidebarUseCSS);
}

template<typename TDeclaringType, typename TValue>
::Platform::Object^ GetValueTypeMember_Depth(::Platform::Object^ instance)
{
    return ref new ::Platform::Box<TValue>(safe_cast<TDeclaringType^>(instance)->Depth);
}

template<typename TDeclaringType, typename TValue>
::Platform::Object^ GetValueTypeMember_HasItems(::Platform::Object^ instance)
{
    return ref new ::Platform::Box<TValue>(safe_cast<TDeclaringType^>(instance)->HasItems);
}

template<typename TDeclaringType, typename TValue>
::Platform::Object^ GetValueTypeMember_Size(::Platform::Object^ instance)
{
    return ref new ::Platform::Box<TValue>(safe_cast<TDeclaringType^>(instance)->Size);
}

template<typename TDeclaringType>
::Platform::Object^ GetReferenceTypeMember_CheckedBrush(::Platform::Object^ instance)
{
    return safe_cast<TDeclaringType^>(instance)->CheckedBrush;
}

template<typename TDeclaringType>
::Platform::Object^ GetReferenceTypeMember_subreddit(::Platform::Object^ instance)
{
    return safe_cast<TDeclaringType^>(instance)->subreddit;
}

template<typename TDeclaringType>
::Platform::Object^ GetReferenceTypeMember_RootNode(::Platform::Object^ instance)
{
    return safe_cast<TDeclaringType^>(instance)->RootNode;
}

template<typename TDeclaringType>
::Platform::Object^ GetReferenceTypeMember_selfTemplate(::Platform::Object^ instance)
{
    return safe_cast<TDeclaringType^>(instance)->selfTemplate;
}

template<typename TDeclaringType>
::Platform::Object^ GetReferenceTypeMember_thumbnailTemplate(::Platform::Object^ instance)
{
    return safe_cast<TDeclaringType^>(instance)->thumbnailTemplate;
}

template<typename TDeclaringType>
::Platform::Object^ GetReferenceTypeMember_ApplicationId(::Platform::Object^ instance)
{
    return safe_cast<TDeclaringType^>(instance)->ApplicationId;
}

template<typename TDeclaringType>
::Platform::Object^ GetReferenceTypeMember_AdUnitId(::Platform::Object^ instance)
{
    return safe_cast<TDeclaringType^>(instance)->AdUnitId;
}

template<typename TDeclaringType>
::Platform::Object^ GetReferenceTypeMember_PostalCode(::Platform::Object^ instance)
{
    return safe_cast<TDeclaringType^>(instance)->PostalCode;
}

template<typename TDeclaringType>
::Platform::Object^ GetReferenceTypeMember_CountryOrRegion(::Platform::Object^ instance)
{
    return safe_cast<TDeclaringType^>(instance)->CountryOrRegion;
}

template<typename TDeclaringType>
::Platform::Object^ GetReferenceTypeMember_Keywords(::Platform::Object^ instance)
{
    return safe_cast<TDeclaringType^>(instance)->Keywords;
}

template<typename TDeclaringType>
::Platform::Object^ GetReferenceTypeMember_Header(::Platform::Object^ instance)
{
    return safe_cast<TDeclaringType^>(instance)->Header;
}

template<typename TDeclaringType>
::Platform::Object^ GetReferenceTypeMember_HeaderTemplate(::Platform::Object^ instance)
{
    return safe_cast<TDeclaringType^>(instance)->HeaderTemplate;
}

template<typename TDeclaringType>
::Platform::Object^ GetReferenceTypeMember_Box(::Platform::Object^ instance)
{
    return safe_cast<TDeclaringType^>(instance)->Box;
}

template<typename TDeclaringType>
::Platform::Object^ GetReferenceTypeMember_listTemplate(::Platform::Object^ instance)
{
    return safe_cast<TDeclaringType^>(instance)->listTemplate;
}

template<typename TDeclaringType>
::Platform::Object^ GetReferenceTypeMember_closedTemplate(::Platform::Object^ instance)
{
    return safe_cast<TDeclaringType^>(instance)->closedTemplate;
}

template<typename TDeclaringType>
::Platform::Object^ GetReferenceTypeMember_nullTemplate(::Platform::Object^ instance)
{
    return safe_cast<TDeclaringType^>(instance)->nullTemplate;
}

template<typename TDeclaringType>
::Platform::Object^ GetReferenceTypeMember_Subreddit(::Platform::Object^ instance)
{
    return safe_cast<TDeclaringType^>(instance)->Subreddit;
}

template<typename TDeclaringType>
::Platform::Object^ GetReferenceTypeMember_posts(::Platform::Object^ instance)
{
    return safe_cast<TDeclaringType^>(instance)->posts;
}

template<typename TDeclaringType>
::Platform::Object^ GetReferenceTypeMember_link(::Platform::Object^ instance)
{
    return safe_cast<TDeclaringType^>(instance)->link;
}

template<typename TDeclaringType>
::Platform::Object^ GetReferenceTypeMember_Title(::Platform::Object^ instance)
{
    return safe_cast<TDeclaringType^>(instance)->Title;
}

template<typename TDeclaringType>
::Platform::Object^ GetReferenceTypeMember_author(::Platform::Object^ instance)
{
    return safe_cast<TDeclaringType^>(instance)->author;
}

template<typename TDeclaringType>
::Platform::Object^ GetReferenceTypeMember_selftext(::Platform::Object^ instance)
{
    return safe_cast<TDeclaringType^>(instance)->selftext;
}

template<typename TDeclaringType>
::Platform::Object^ GetReferenceTypeMember_thumbnail(::Platform::Object^ instance)
{
    return safe_cast<TDeclaringType^>(instance)->thumbnail;
}

template<typename TDeclaringType>
::Platform::Object^ GetReferenceTypeMember_thumbnailURI(::Platform::Object^ instance)
{
    return safe_cast<TDeclaringType^>(instance)->thumbnailURI;
}

template<typename TDeclaringType>
::Platform::Object^ GetReferenceTypeMember_previewURI(::Platform::Object^ instance)
{
    return safe_cast<TDeclaringType^>(instance)->previewURI;
}

template<typename TDeclaringType>
::Platform::Object^ GetReferenceTypeMember_changedownvote(::Platform::Object^ instance)
{
    return safe_cast<TDeclaringType^>(instance)->changedownvote;
}

template<typename TDeclaringType>
::Platform::Object^ GetReferenceTypeMember_changeupvote(::Platform::Object^ instance)
{
    return safe_cast<TDeclaringType^>(instance)->changeupvote;
}

template<typename TDeclaringType>
::Platform::Object^ GetReferenceTypeMember_previewCommand(::Platform::Object^ instance)
{
    return safe_cast<TDeclaringType^>(instance)->previewCommand;
}

template<typename TDeclaringType>
::Platform::Object^ GetReferenceTypeMember_CommentDataTemplate(::Platform::Object^ instance)
{
    return safe_cast<TDeclaringType^>(instance)->CommentDataTemplate;
}

template<typename TDeclaringType>
::Platform::Object^ GetReferenceTypeMember_SubPostDataTemplate(::Platform::Object^ instance)
{
    return safe_cast<TDeclaringType^>(instance)->SubPostDataTemplate;
}

template<typename TDeclaringType>
::Platform::Object^ GetReferenceTypeMember_ParentNode(::Platform::Object^ instance)
{
    return safe_cast<TDeclaringType^>(instance)->ParentNode;
}

template<typename TDeclaringType>
::Platform::Object^ GetReferenceTypeMember_Data(::Platform::Object^ instance)
{
    return safe_cast<TDeclaringType^>(instance)->Data;
}

template<typename TDeclaringType, typename TTargetType, typename TValue>
void SetAttachableMember_MDElements(::Platform::Object^ instance, ::Platform::Object^ value)
{
    TDeclaringType::SetMDElements(safe_cast<TTargetType^>(instance), (TValue)value);
}

template<typename TDeclaringType, typename TTargetType, typename TValue>
void SetAttachableMember_MD(::Platform::Object^ instance, ::Platform::Object^ value)
{
    TDeclaringType::SetMD(safe_cast<TTargetType^>(instance), (TValue)value);
}

template<typename TDeclaringType, typename TValue>
void SetEnumMember_sort(::Platform::Object^ instance, ::Platform::Object^ value)
{
    safe_cast<TDeclaringType^>(instance)->sort = safe_cast<::Platform::IBox<TValue>^>(value)->Value;
}

template<typename TDeclaringType, typename TValue>
void SetEnumMember_Range(::Platform::Object^ instance, ::Platform::Object^ value)
{
    safe_cast<TDeclaringType^>(instance)->Range = safe_cast<::Platform::IBox<TValue>^>(value)->Value;
}

template<typename TDeclaringType, typename TValue>
void SetEnumMember_Sort(::Platform::Object^ instance, ::Platform::Object^ value)
{
    safe_cast<TDeclaringType^>(instance)->Sort = safe_cast<::Platform::IBox<TValue>^>(value)->Value;
}

template<typename TDeclaringType, typename TValue>
void SetEnumMember_contentType(::Platform::Object^ instance, ::Platform::Object^ value)
{
    safe_cast<TDeclaringType^>(instance)->contentType = safe_cast<::Platform::IBox<TValue>^>(value)->Value;
}

template<typename TDeclaringType, typename TValue>
void SetValueTypeMember_isComment(::Platform::Object^ instance, ::Platform::Object^ value)
{
    safe_cast<TDeclaringType^>(instance)->isComment = safe_cast<::Platform::IBox<TValue>^>(value)->Value;
}

template<typename TDeclaringType, typename TValue>
void SetValueTypeMember_AutoRefreshIntervalInSeconds(::Platform::Object^ instance, ::Platform::Object^ value)
{
    safe_cast<TDeclaringType^>(instance)->AutoRefreshIntervalInSeconds = safe_cast<::Platform::IBox<TValue>^>(value)->Value;
}

template<typename TDeclaringType, typename TValue>
void SetValueTypeMember_IsAutoRefreshEnabled(::Platform::Object^ instance, ::Platform::Object^ value)
{
    safe_cast<TDeclaringType^>(instance)->IsAutoRefreshEnabled = safe_cast<::Platform::IBox<TValue>^>(value)->Value;
}

template<typename TDeclaringType, typename TValue>
void SetValueTypeMember_IsExpanded(::Platform::Object^ instance, ::Platform::Object^ value)
{
    safe_cast<TDeclaringType^>(instance)->IsExpanded = safe_cast<::Platform::IBox<TValue>^>(value)->Value;
}

template<typename TDeclaringType, typename TValue>
void SetValueTypeMember_Subscribed(::Platform::Object^ instance, ::Platform::Object^ value)
{
    safe_cast<TDeclaringType^>(instance)->Subscribed = safe_cast<::Platform::IBox<TValue>^>(value)->Value;
}

template<typename TDeclaringType, typename TValue>
void SetValueTypeMember_viewMode(::Platform::Object^ instance, ::Platform::Object^ value)
{
    safe_cast<TDeclaringType^>(instance)->viewMode = safe_cast<::Platform::IBox<TValue>^>(value)->Value;
}

template<typename TDeclaringType, typename TValue>
void SetValueTypeMember_Liked(::Platform::Object^ instance, ::Platform::Object^ value)
{
    safe_cast<TDeclaringType^>(instance)->Liked = safe_cast<::Platform::IBox<TValue>^>(value)->Value;
}

template<typename TDeclaringType, typename TValue>
void SetValueTypeMember_saved(::Platform::Object^ instance, ::Platform::Object^ value)
{
    safe_cast<TDeclaringType^>(instance)->saved = safe_cast<::Platform::IBox<TValue>^>(value)->Value;
}

template<typename TDeclaringType, typename TValue>
void SetValueTypeMember_SidebarUseCSS(::Platform::Object^ instance, ::Platform::Object^ value)
{
    safe_cast<TDeclaringType^>(instance)->SidebarUseCSS = safe_cast<::Platform::IBox<TValue>^>(value)->Value;
}

template<typename TDeclaringType, typename TValue>
void SetReferenceTypeMember_CheckedBrush(::Platform::Object^ instance, ::Platform::Object^ value)
{
    safe_cast<TDeclaringType^>(instance)->CheckedBrush = safe_cast<TValue^>(value);
}

template<typename TDeclaringType, typename TValue>
void SetReferenceTypeMember_reasonsVec(::Platform::Object^ instance, ::Platform::Object^ value)
{
    safe_cast<TDeclaringType^>(instance)->reasonsVec = safe_cast<TValue^>(value);
}

template<typename TDeclaringType, typename TValue>
void SetReferenceTypeMember_subreddit(::Platform::Object^ instance, ::Platform::Object^ value)
{
    safe_cast<TDeclaringType^>(instance)->subreddit = safe_cast<TValue^>(value);
}

template<typename TDeclaringType, typename TValue>
void SetReferenceTypeMember_RootNode(::Platform::Object^ instance, ::Platform::Object^ value)
{
    safe_cast<TDeclaringType^>(instance)->RootNode = safe_cast<TValue^>(value);
}

template<typename TDeclaringType, typename TValue>
void SetReferenceTypeMember_selfTemplate(::Platform::Object^ instance, ::Platform::Object^ value)
{
    safe_cast<TDeclaringType^>(instance)->selfTemplate = safe_cast<TValue^>(value);
}

template<typename TDeclaringType, typename TValue>
void SetReferenceTypeMember_thumbnailTemplate(::Platform::Object^ instance, ::Platform::Object^ value)
{
    safe_cast<TDeclaringType^>(instance)->thumbnailTemplate = safe_cast<TValue^>(value);
}

template<typename TDeclaringType, typename TValue>
void SetReferenceTypeMember_ApplicationId(::Platform::Object^ instance, ::Platform::Object^ value)
{
    safe_cast<TDeclaringType^>(instance)->ApplicationId = safe_cast<TValue^>(value);
}

template<typename TDeclaringType, typename TValue>
void SetReferenceTypeMember_AdUnitId(::Platform::Object^ instance, ::Platform::Object^ value)
{
    safe_cast<TDeclaringType^>(instance)->AdUnitId = safe_cast<TValue^>(value);
}

template<typename TDeclaringType, typename TValue>
void SetReferenceTypeMember_PostalCode(::Platform::Object^ instance, ::Platform::Object^ value)
{
    safe_cast<TDeclaringType^>(instance)->PostalCode = safe_cast<TValue^>(value);
}

template<typename TDeclaringType, typename TValue>
void SetReferenceTypeMember_CountryOrRegion(::Platform::Object^ instance, ::Platform::Object^ value)
{
    safe_cast<TDeclaringType^>(instance)->CountryOrRegion = safe_cast<TValue^>(value);
}

template<typename TDeclaringType, typename TValue>
void SetReferenceTypeMember_Keywords(::Platform::Object^ instance, ::Platform::Object^ value)
{
    safe_cast<TDeclaringType^>(instance)->Keywords = safe_cast<TValue^>(value);
}

template<typename TDeclaringType, typename TValue>
void SetReferenceTypeMember_Header(::Platform::Object^ instance, ::Platform::Object^ value)
{
    safe_cast<TDeclaringType^>(instance)->Header = safe_cast<TValue^>(value);
}

template<typename TDeclaringType, typename TValue>
void SetReferenceTypeMember_HeaderTemplate(::Platform::Object^ instance, ::Platform::Object^ value)
{
    safe_cast<TDeclaringType^>(instance)->HeaderTemplate = safe_cast<TValue^>(value);
}

template<typename TDeclaringType, typename TValue>
void SetReferenceTypeMember_post(::Platform::Object^ instance, ::Platform::Object^ value)
{
    safe_cast<TDeclaringType^>(instance)->post = safe_cast<TValue^>(value);
}

template<typename TDeclaringType, typename TValue>
void SetReferenceTypeMember_listTemplate(::Platform::Object^ instance, ::Platform::Object^ value)
{
    safe_cast<TDeclaringType^>(instance)->listTemplate = safe_cast<TValue^>(value);
}

template<typename TDeclaringType, typename TValue>
void SetReferenceTypeMember_closedTemplate(::Platform::Object^ instance, ::Platform::Object^ value)
{
    safe_cast<TDeclaringType^>(instance)->closedTemplate = safe_cast<TValue^>(value);
}

template<typename TDeclaringType, typename TValue>
void SetReferenceTypeMember_nullTemplate(::Platform::Object^ instance, ::Platform::Object^ value)
{
    safe_cast<TDeclaringType^>(instance)->nullTemplate = safe_cast<TValue^>(value);
}

template<typename TDeclaringType, typename TValue>
void SetReferenceTypeMember_previewCommand(::Platform::Object^ instance, ::Platform::Object^ value)
{
    safe_cast<TDeclaringType^>(instance)->previewCommand = safe_cast<TValue^>(value);
}

template<typename TDeclaringType, typename TValue>
void SetReferenceTypeMember_CommentDataTemplate(::Platform::Object^ instance, ::Platform::Object^ value)
{
    safe_cast<TDeclaringType^>(instance)->CommentDataTemplate = safe_cast<TValue^>(value);
}

template<typename TDeclaringType, typename TValue>
void SetReferenceTypeMember_SubPostDataTemplate(::Platform::Object^ instance, ::Platform::Object^ value)
{
    safe_cast<TDeclaringType^>(instance)->SubPostDataTemplate = safe_cast<TValue^>(value);
}

template<typename TDeclaringType, typename TValue>
void SetReferenceTypeMember_ParentNode(::Platform::Object^ instance, ::Platform::Object^ value)
{
    safe_cast<TDeclaringType^>(instance)->ParentNode = safe_cast<TValue^>(value);
}

template<typename TDeclaringType, typename TValue>
void SetReferenceTypeMember_Data(::Platform::Object^ instance, ::Platform::Object^ value)
{
    safe_cast<TDeclaringType^>(instance)->Data = safe_cast<TValue^>(value);
}

enum TypeInfo_Flags
{
    TypeInfo_Flags_None                 = 0x00,
    TypeInfo_Flags_IsLocalType          = 0x01,
    TypeInfo_Flags_IsSystemType         = 0x02,
    TypeInfo_Flags_IsReturnTypeStub     = 0x04,
    TypeInfo_Flags_IsBindable           = 0x08,
    TypeInfo_Flags_IsMarkupExtension    = 0x10, 
};

struct TypeInfo
{
    PCWSTR  typeName;
    PCWSTR contentPropertyName;
    ::Platform::Object^ (*activator)();
    void (*collectionAdd)(::Platform::Object^, ::Platform::Object^);
    void (*dictionaryAdd)(::Platform::Object^, ::Platform::Object^, ::Platform::Object^);
    ::Platform::Object^ (*fromStringConverter)(::XamlTypeInfo::InfoProvider::XamlUserType^, ::Platform::String^);
    int     baseTypeIndex;
    int     firstMemberIndex;
    int     firstEnumValueIndex;
    int     createFromStringIndex;
    ::Windows::UI::Xaml::Interop::TypeKind kindofType;
    unsigned int flags;
};

const TypeInfo TypeInfos[] = 
{
    //   0
    L"Int32", L"",
    nullptr, nullptr, nullptr, nullptr,
    -1,
    0, 0, -1, ::Windows::UI::Xaml::Interop::TypeKind::Metadata,
    TypeInfo_Flags_IsSystemType | TypeInfo_Flags_None,
    //   1
    L"Object", L"",
    nullptr, nullptr, nullptr, nullptr,
    -1,
    0, 0, -1, ::Windows::UI::Xaml::Interop::TypeKind::Metadata,
    TypeInfo_Flags_IsSystemType | TypeInfo_Flags_None,
    //   2
    L"String", L"",
    nullptr, nullptr, nullptr, nullptr,
    -1,
    0, 0, -1, ::Windows::UI::Xaml::Interop::TypeKind::Metadata,
    TypeInfo_Flags_IsSystemType | TypeInfo_Flags_None,
    //   3
    L"UInt32", L"",
    nullptr, nullptr, nullptr, nullptr,
    -1,
    0, 0, -1, ::Windows::UI::Xaml::Interop::TypeKind::Metadata,
    TypeInfo_Flags_IsSystemType | TypeInfo_Flags_None,
    //   4
    L"Boolean", L"",
    nullptr, nullptr, nullptr, nullptr,
    -1,
    0, 0, -1, ::Windows::UI::Xaml::Interop::TypeKind::Metadata,
    TypeInfo_Flags_IsSystemType | TypeInfo_Flags_None,
    //   5
    L"System.Enum", L"",
    nullptr, nullptr, nullptr, nullptr,
    10, // System.ValueType
    0, 0, -1, ::Windows::UI::Xaml::Interop::TypeKind::Metadata,
    TypeInfo_Flags_None,
    //   6
    L"Reddit.NavPage", L"",
    nullptr, nullptr, nullptr, nullptr,
    52, // Windows.UI.Xaml.Controls.Page
    0, 0, -1, ::Windows::UI::Xaml::Interop::TypeKind::Custom,
    TypeInfo_Flags_IsLocalType | TypeInfo_Flags_None,
    //   7
    L"Reddit.ReplyBox", L"",
    nullptr, nullptr, nullptr, nullptr,
    68, // Windows.UI.Xaml.Controls.UserControl
    0, 0, -1, ::Windows::UI::Xaml::Interop::TypeKind::Custom,
    TypeInfo_Flags_IsLocalType | TypeInfo_Flags_None,
    //   8
    L"Reddit.TestPage", L"",
    &ActivateType<::Reddit::TestPage>, nullptr, nullptr, nullptr,
    52, // Windows.UI.Xaml.Controls.Page
    0, 0, -1, ::Windows::UI::Xaml::Interop::TypeKind::Custom,
    TypeInfo_Flags_IsLocalType | TypeInfo_Flags_None,
    //   9
    L"Reddit.UserPage", L"",
    &ActivateType<::Reddit::UserPage>, nullptr, nullptr, nullptr,
    6, // Reddit.NavPage
    0, 0, -1, ::Windows::UI::Xaml::Interop::TypeKind::Custom,
    TypeInfo_Flags_IsLocalType | TypeInfo_Flags_None,
    //  10
    L"System.ValueType", L"",
    nullptr, nullptr, nullptr, nullptr,
    1, // Object
    0, 0, -1, ::Windows::UI::Xaml::Interop::TypeKind::Metadata,
    TypeInfo_Flags_None,
    //  11
    L"account.postSort", L"",
    nullptr, nullptr, nullptr, &FromStringConverter<::account::postSort>,
    5, // System.Enum
    0, 0, -1, ::Windows::UI::Xaml::Interop::TypeKind::Custom,
    TypeInfo_Flags_IsLocalType | TypeInfo_Flags_None,
    //  12
    L"account.timerange", L"",
    nullptr, nullptr, nullptr, &FromStringConverter<::account::timerange>,
    5, // System.Enum
    0, 7, -1, ::Windows::UI::Xaml::Interop::TypeKind::Custom,
    TypeInfo_Flags_IsLocalType | TypeInfo_Flags_None,
    //  13
    L"Reddit.CommentView", L"",
    &ActivateType<::Reddit::CommentView>, nullptr, nullptr, nullptr,
    68, // Windows.UI.Xaml.Controls.UserControl
    0, 14, -1, ::Windows::UI::Xaml::Interop::TypeKind::Custom,
    TypeInfo_Flags_IsLocalType | TypeInfo_Flags_None,
    //  14
    L"account.subpostUWP", L"",
    nullptr, nullptr, nullptr, nullptr,
    1, // Object
    0, 14, -1, ::Windows::UI::Xaml::Interop::TypeKind::Custom,
    TypeInfo_Flags_IsLocalType | TypeInfo_Flags_None,
    //  15
    L"Reddit.MyResources", L"",
    &ActivateType<::Reddit::MyResources>, nullptr, &DictionaryAdd<::Reddit::MyResources, ::Platform::Object^, ::Platform::Object^>, nullptr,
    65, // Windows.UI.Xaml.ResourceDictionary
    21, 14, -1, ::Windows::UI::Xaml::Interop::TypeKind::Custom,
    TypeInfo_Flags_IsLocalType | TypeInfo_Flags_None,
    //  16
    L"account.RedditType", L"",
    nullptr, nullptr, nullptr, &FromStringConverter<::account::RedditType>,
    5, // System.Enum
    21, 14, -1, ::Windows::UI::Xaml::Interop::TypeKind::Custom,
    TypeInfo_Flags_IsLocalType | TypeInfo_Flags_None,
    //  17
    L"Reddit.DepthToColor", L"",
    &ActivateType<::Reddit::DepthToColor>, nullptr, nullptr, nullptr,
    1, // Object
    21, 19, -1, ::Windows::UI::Xaml::Interop::TypeKind::Custom,
    TypeInfo_Flags_IsLocalType | TypeInfo_Flags_None,
    //  18
    L"Reddit.reportFlyout", L"",
    &ActivateType<::Reddit::reportFlyout>, nullptr, nullptr, nullptr,
    57, // Windows.UI.Xaml.Controls.Flyout
    21, 19, -1, ::Windows::UI::Xaml::Interop::TypeKind::Custom,
    TypeInfo_Flags_IsLocalType | TypeInfo_Flags_None,
    //  19
    L"account.commentSort", L"",
    nullptr, nullptr, nullptr, &FromStringConverter<::account::commentSort>,
    5, // System.Enum
    24, 19, -1, ::Windows::UI::Xaml::Interop::TypeKind::Custom,
    TypeInfo_Flags_IsLocalType | TypeInfo_Flags_None,
    //  20
    L"Reddit.previewIconC", L"",
    &ActivateType<::Reddit::previewIconC>, nullptr, nullptr, nullptr,
    1, // Object
    24, 27, -1, ::Windows::UI::Xaml::Interop::TypeKind::Custom,
    TypeInfo_Flags_IsLocalType | TypeInfo_Flags_None,
    //  21
    L"Reddit.PopupContent", L"",
    nullptr, nullptr, nullptr, nullptr,
    73, // Windows.UI.Xaml.Controls.ContentControl
    24, 27, -1, ::Windows::UI::Xaml::Interop::TypeKind::Custom,
    TypeInfo_Flags_IsLocalType | TypeInfo_Flags_None,
    //  22
    L"converters.ScoreText", L"",
    &ActivateType<::converters::ScoreText>, nullptr, nullptr, nullptr,
    1, // Object
    24, 27, -1, ::Windows::UI::Xaml::Interop::TypeKind::Custom,
    TypeInfo_Flags_IsLocalType | TypeInfo_Flags_None,
    //  23
    L"Reddit.EXplaceHolder", L"",
    &ActivateType<::Reddit::EXplaceHolder>, nullptr, nullptr, nullptr,
    73, // Windows.UI.Xaml.Controls.ContentControl
    24, 27, -1, ::Windows::UI::Xaml::Interop::TypeKind::Custom,
    TypeInfo_Flags_IsLocalType | TypeInfo_Flags_None,
    //  24
    L"mdblock.refMDElements", L"",
    nullptr, nullptr, nullptr, nullptr,
    1, // Object
    26, 27, -1, ::Windows::UI::Xaml::Interop::TypeKind::Metadata,
    TypeInfo_Flags_IsReturnTypeStub | TypeInfo_Flags_None,
    //  25
    L"account.subredditInfo", L"",
    nullptr, nullptr, nullptr, nullptr,
    10, // System.ValueType
    26, 27, -1, ::Windows::UI::Xaml::Interop::TypeKind::Custom,
    TypeInfo_Flags_IsLocalType | TypeInfo_Flags_IsReturnTypeStub | TypeInfo_Flags_None,
    //  26
    L"Reddit.MessagesViewer", L"",
    &ActivateType<::Reddit::MessagesViewer>, nullptr, nullptr, nullptr,
    63, // Windows.UI.Xaml.Controls.ListView
    26, 27, -1, ::Windows::UI::Xaml::Interop::TypeKind::Custom,
    TypeInfo_Flags_IsLocalType | TypeInfo_Flags_None,
    //  27
    L"converters.HasPreview", L"",
    &ActivateType<::converters::HasPreview>, nullptr, nullptr, nullptr,
    1, // Object
    26, 27, -1, ::Windows::UI::Xaml::Interop::TypeKind::Custom,
    TypeInfo_Flags_IsLocalType | TypeInfo_Flags_None,
    //  28
    L"mdblock.mdEnhancedBox", L"",
    nullptr, nullptr, nullptr, nullptr,
    69, // Windows.UI.Xaml.Controls.RichEditBox
    26, 27, -1, ::Windows::UI::Xaml::Interop::TypeKind::Metadata,
    TypeInfo_Flags_IsReturnTypeStub | TypeInfo_Flags_None,
    //  29
    L"Reddit.rootWindowGrid", L"",
    &ActivateType<::Reddit::rootWindowGrid>, nullptr, nullptr, nullptr,
    54, // Windows.UI.Xaml.Controls.Grid
    26, 27, -1, ::Windows::UI::Xaml::Interop::TypeKind::Custom,
    TypeInfo_Flags_IsLocalType | TypeInfo_Flags_None,
    //  30
    L"Reddit.contentResizer", L"",
    &ActivateType<::Reddit::contentResizer>, nullptr, nullptr, nullptr,
    73, // Windows.UI.Xaml.Controls.ContentControl
    27, 27, -1, ::Windows::UI::Xaml::Interop::TypeKind::Custom,
    TypeInfo_Flags_IsLocalType | TypeInfo_Flags_None,
    //  31
    L"converters.InverseBool", L"",
    &ActivateType<::converters::InverseBool>, nullptr, nullptr, nullptr,
    1, // Object
    27, 27, -1, ::Windows::UI::Xaml::Interop::TypeKind::Custom,
    TypeInfo_Flags_IsLocalType | TypeInfo_Flags_None,
    //  32
    L"Reddit.CommentViewPage", L"",
    &ActivateType<::Reddit::CommentViewPage>, nullptr, nullptr, nullptr,
    6, // Reddit.NavPage
    27, 27, -1, ::Windows::UI::Xaml::Interop::TypeKind::Custom,
    TypeInfo_Flags_IsLocalType | TypeInfo_Flags_None,
    //  33
    L"Windows.Foundation.Uri", L"",
    nullptr, nullptr, nullptr, nullptr,
    -1,
    29, 27, -1, ::Windows::UI::Xaml::Interop::TypeKind::Metadata,
    TypeInfo_Flags_IsSystemType | TypeInfo_Flags_None,
    //  34
    L"converters.BrushToColor", L"",
    &ActivateType<::converters::BrushToColor>, nullptr, nullptr, nullptr,
    1, // Object
    29, 27, -1, ::Windows::UI::Xaml::Interop::TypeKind::Custom,
    TypeInfo_Flags_IsLocalType | TypeInfo_Flags_None,
    //  35
    L"converters.unformatHtml", L"",
    &ActivateType<::converters::unformatHtml>, nullptr, nullptr, nullptr,
    1, // Object
    29, 27, -1, ::Windows::UI::Xaml::Interop::TypeKind::Custom,
    TypeInfo_Flags_IsLocalType | TypeInfo_Flags_None,
    //  36
    L"account.postContentType", L"",
    nullptr, nullptr, nullptr, &FromStringConverter<::account::postContentType>,
    5, // System.Enum
    29, 27, -1, ::Windows::UI::Xaml::Interop::TypeKind::Custom,
    TypeInfo_Flags_IsLocalType | TypeInfo_Flags_None,
    //  37
    L"converters.upvotechecked", L"",
    &ActivateType<::converters::upvotechecked>, nullptr, nullptr, nullptr,
    1, // Object
    29, 38, -1, ::Windows::UI::Xaml::Interop::TypeKind::Custom,
    TypeInfo_Flags_IsLocalType | TypeInfo_Flags_None,
    //  38
    L"mdblock.mdRichProperties", L"",
    &ActivateType<::mdblock::mdRichProperties>, nullptr, nullptr, nullptr,
    59, // Windows.UI.Xaml.DependencyObject
    29, 38, -1, ::Windows::UI::Xaml::Interop::TypeKind::Metadata,
    TypeInfo_Flags_None,
    //  39
    L"TreeViewControl.TreeView", L"",
    &ActivateType<::TreeViewControl::TreeView>, nullptr, nullptr, nullptr,
    63, // Windows.UI.Xaml.Controls.ListView
    31, 38, -1, ::Windows::UI::Xaml::Interop::TypeKind::Metadata,
    TypeInfo_Flags_None,
    //  40
    L"TreeViewControl.TreeNode", L"",
    &ActivateType<::TreeViewControl::TreeNode>, nullptr, nullptr, nullptr,
    1, // Object
    32, 38, -1, ::Windows::UI::Xaml::Interop::TypeKind::Metadata,
    TypeInfo_Flags_IsBindable | TypeInfo_Flags_None,
    //  41
    L"ExpanderControl.Expander", L"",
    &ActivateType<::ExpanderControl::Expander>, nullptr, nullptr, nullptr,
    73, // Windows.UI.Xaml.Controls.ContentControl
    38, 38, -1, ::Windows::UI::Xaml::Interop::TypeKind::Metadata,
    TypeInfo_Flags_None,
    //  42
    L"Reddit.SubRedditViewPage", L"",
    &ActivateType<::Reddit::SubRedditViewPage>, nullptr, nullptr, nullptr,
    6, // Reddit.NavPage
    41, 38, -1, ::Windows::UI::Xaml::Interop::TypeKind::Custom,
    TypeInfo_Flags_IsLocalType | TypeInfo_Flags_None,
    //  43
    L"converters.ThemeConverter", L"",
    &ActivateType<::converters::ThemeConverter>, nullptr, nullptr, nullptr,
    1, // Object
    49, 38, -1, ::Windows::UI::Xaml::Interop::TypeKind::Custom,
    TypeInfo_Flags_IsLocalType | TypeInfo_Flags_None,
    //  44
    L"Windows.UI.Xaml.UIElement", L"",
    nullptr, nullptr, nullptr, nullptr,
    -1,
    49, 38, -1, ::Windows::UI::Xaml::Interop::TypeKind::Metadata,
    TypeInfo_Flags_IsSystemType | TypeInfo_Flags_None,
    //  45
    L"Reddit.sortToTimeRangeVis", L"",
    &ActivateType<::Reddit::sortToTimeRangeVis>, nullptr, nullptr, nullptr,
    1, // Object
    49, 38, -1, ::Windows::UI::Xaml::Interop::TypeKind::Custom,
    TypeInfo_Flags_IsLocalType | TypeInfo_Flags_None,
    //  46
    L"converters.downvotechecked", L"",
    &ActivateType<::converters::downvotechecked>, nullptr, nullptr, nullptr,
    1, // Object
    49, 38, -1, ::Windows::UI::Xaml::Interop::TypeKind::Custom,
    TypeInfo_Flags_IsLocalType | TypeInfo_Flags_None,
    //  47
    L"Windows.UI.Xaml.Media.Brush", L"",
    nullptr, nullptr, nullptr, nullptr,
    -1,
    49, 38, -1, ::Windows::UI::Xaml::Interop::TypeKind::Metadata,
    TypeInfo_Flags_IsSystemType | TypeInfo_Flags_None,
    //  48
    L"Reddit.MixedContentSelector", L"",
    &ActivateType<::Reddit::MixedContentSelector>, nullptr, nullptr, nullptr,
    79, // Windows.UI.Xaml.Controls.DataTemplateSelector
    49, 38, -1, ::Windows::UI::Xaml::Interop::TypeKind::Custom,
    TypeInfo_Flags_IsLocalType | TypeInfo_Flags_None,
    //  49
    L"TreeViewControl.TreeViewItem", L"",
    &ActivateType<::TreeViewControl::TreeViewItem>, nullptr, nullptr, nullptr,
    71, // Windows.UI.Xaml.Controls.ListViewItem
    51, 38, -1, ::Windows::UI::Xaml::Interop::TypeKind::Metadata,
    TypeInfo_Flags_IsBindable | TypeInfo_Flags_None,
    //  50
    L"Windows.UI.Xaml.DataTemplate", L"",
    nullptr, nullptr, nullptr, nullptr,
    -1,
    51, 38, -1, ::Windows::UI::Xaml::Interop::TypeKind::Metadata,
    TypeInfo_Flags_IsSystemType | TypeInfo_Flags_None,
    //  51
    L"mdblock.MDFullEnhancedEditor", L"",
    &ActivateType<::mdblock::MDFullEnhancedEditor>, nullptr, nullptr, nullptr,
    68, // Windows.UI.Xaml.Controls.UserControl
    51, 38, -1, ::Windows::UI::Xaml::Interop::TypeKind::Metadata,
    TypeInfo_Flags_None,
    //  52
    L"Windows.UI.Xaml.Controls.Page", L"",
    nullptr, nullptr, nullptr, nullptr,
    -1,
    52, 38, -1, ::Windows::UI::Xaml::Interop::TypeKind::Metadata,
    TypeInfo_Flags_IsSystemType | TypeInfo_Flags_None,
    //  53
    L"Reddit.NoToggleBehaviorButton", L"",
    &ActivateType<::Reddit::NoToggleBehaviorButton>, nullptr, nullptr, nullptr,
    80, // Windows.UI.Xaml.Controls.Primitives.ToggleButton
    52, 38, -1, ::Windows::UI::Xaml::Interop::TypeKind::Custom,
    TypeInfo_Flags_IsLocalType | TypeInfo_Flags_None,
    //  54
    L"Windows.UI.Xaml.Controls.Grid", L"",
    nullptr, nullptr, nullptr, nullptr,
    -1,
    52, 38, -1, ::Windows::UI::Xaml::Interop::TypeKind::Metadata,
    TypeInfo_Flags_IsSystemType | TypeInfo_Flags_None,
    //  55
    L"Windows.UI.Xaml.Controls.Panel", L"",
    nullptr, nullptr, nullptr, nullptr,
    -1,
    52, 38, -1, ::Windows::UI::Xaml::Interop::TypeKind::Metadata,
    TypeInfo_Flags_IsSystemType | TypeInfo_Flags_None,
    //  56
    L"Windows.UI.Xaml.Input.ICommand", L"",
    nullptr, nullptr, nullptr, nullptr,
    -1,
    52, 38, -1, ::Windows::UI::Xaml::Interop::TypeKind::Metadata,
    TypeInfo_Flags_IsSystemType | TypeInfo_Flags_None,
    //  57
    L"Windows.UI.Xaml.Controls.Flyout", L"",
    nullptr, nullptr, nullptr, nullptr,
    -1,
    52, 38, -1, ::Windows::UI::Xaml::Interop::TypeKind::Metadata,
    TypeInfo_Flags_IsSystemType | TypeInfo_Flags_None,
    //  58
    L"Reddit.comboboxTemplateSelector", L"",
    &ActivateType<::Reddit::comboboxTemplateSelector>, nullptr, nullptr, nullptr,
    79, // Windows.UI.Xaml.Controls.DataTemplateSelector
    52, 38, -1, ::Windows::UI::Xaml::Interop::TypeKind::Custom,
    TypeInfo_Flags_IsLocalType | TypeInfo_Flags_None,
    //  59
    L"Windows.UI.Xaml.DependencyObject", L"",
    nullptr, nullptr, nullptr, nullptr,
    -1,
    55, 38, -1, ::Windows::UI::Xaml::Interop::TypeKind::Metadata,
    TypeInfo_Flags_IsSystemType | TypeInfo_Flags_None,
    //  60
    L"Reddit.AppBarToggleColoredButton", L"",
    &ActivateType<::Reddit::AppBarToggleColoredButton>, nullptr, nullptr, nullptr,
    77, // Windows.UI.Xaml.Controls.AppBarToggleButton
    55, 38, -1, ::Windows::UI::Xaml::Interop::TypeKind::Custom,
    TypeInfo_Flags_IsLocalType | TypeInfo_Flags_None,
    //  61
    L"Windows.UI.Xaml.FrameworkElement", L"",
    nullptr, nullptr, nullptr, nullptr,
    -1,
    56, 38, -1, ::Windows::UI::Xaml::Interop::TypeKind::Metadata,
    TypeInfo_Flags_IsSystemType | TypeInfo_Flags_None,
    //  62
    L"converters.NullableValueConverter", L"",
    &ActivateType<::converters::NullableValueConverter>, nullptr, nullptr, nullptr,
    1, // Object
    56, 38, -1, ::Windows::UI::Xaml::Interop::TypeKind::Custom,
    TypeInfo_Flags_IsLocalType | TypeInfo_Flags_None,
    //  63
    L"Windows.UI.Xaml.Controls.ListView", L"",
    nullptr, nullptr, nullptr, nullptr,
    -1,
    56, 38, -1, ::Windows::UI::Xaml::Interop::TypeKind::Metadata,
    TypeInfo_Flags_IsSystemType | TypeInfo_Flags_None,
    //  64
    L"account.DistinguishedAccountTypes", L"",
    nullptr, nullptr, nullptr, &FromStringConverter<::account::DistinguishedAccountTypes>,
    5, // System.Enum
    56, 38, -1, ::Windows::UI::Xaml::Interop::TypeKind::Custom,
    TypeInfo_Flags_IsLocalType | TypeInfo_Flags_None,
    //  65
    L"Windows.UI.Xaml.ResourceDictionary", L"",
    nullptr, nullptr, nullptr, nullptr,
    -1,
    56, 43, -1, ::Windows::UI::Xaml::Interop::TypeKind::Metadata,
    TypeInfo_Flags_IsSystemType | TypeInfo_Flags_None,
    //  66
    L"converters.DistinguishedAuthorBadge", L"",
    &ActivateType<::converters::DistinguishedAuthorBadge>, nullptr, nullptr, nullptr,
    1, // Object
    56, 43, -1, ::Windows::UI::Xaml::Interop::TypeKind::Custom,
    TypeInfo_Flags_IsLocalType | TypeInfo_Flags_None,
    //  67
    L"Windows.UI.Xaml.Controls.StackPanel", L"",
    nullptr, nullptr, nullptr, nullptr,
    -1,
    56, 43, -1, ::Windows::UI::Xaml::Interop::TypeKind::Metadata,
    TypeInfo_Flags_IsSystemType | TypeInfo_Flags_None,
    //  68
    L"Windows.UI.Xaml.Controls.UserControl", L"",
    nullptr, nullptr, nullptr, nullptr,
    -1,
    56, 43, -1, ::Windows::UI::Xaml::Interop::TypeKind::Metadata,
    TypeInfo_Flags_IsSystemType | TypeInfo_Flags_None,
    //  69
    L"Windows.UI.Xaml.Controls.RichEditBox", L"",
    nullptr, nullptr, nullptr, nullptr,
    -1,
    56, 43, -1, ::Windows::UI::Xaml::Interop::TypeKind::Metadata,
    TypeInfo_Flags_IsSystemType | TypeInfo_Flags_None,
    //  70
    L"Windows.UI.Xaml.Controls.ItemsControl", L"",
    nullptr, nullptr, nullptr, nullptr,
    -1,
    56, 43, -1, ::Windows::UI::Xaml::Interop::TypeKind::Metadata,
    TypeInfo_Flags_IsSystemType | TypeInfo_Flags_None,
    //  71
    L"Windows.UI.Xaml.Controls.ListViewItem", L"",
    nullptr, nullptr, nullptr, nullptr,
    -1,
    56, 43, -1, ::Windows::UI::Xaml::Interop::TypeKind::Metadata,
    TypeInfo_Flags_IsSystemType | TypeInfo_Flags_None,
    //  72
    L"Reddit.CurrentUserSubscribedConverter", L"",
    &ActivateType<::Reddit::CurrentUserSubscribedConverter>, nullptr, nullptr, nullptr,
    1, // Object
    56, 43, -1, ::Windows::UI::Xaml::Interop::TypeKind::Custom,
    TypeInfo_Flags_IsLocalType | TypeInfo_Flags_None,
    //  73
    L"Windows.UI.Xaml.Controls.ContentControl", L"",
    nullptr, nullptr, nullptr, nullptr,
    -1,
    56, 43, -1, ::Windows::UI::Xaml::Interop::TypeKind::Metadata,
    TypeInfo_Flags_IsSystemType | TypeInfo_Flags_None,
    //  74
    L"Windows.UI.Xaml.Controls.ControlTemplate", L"",
    nullptr, nullptr, nullptr, nullptr,
    -1,
    56, 43, -1, ::Windows::UI::Xaml::Interop::TypeKind::Metadata,
    TypeInfo_Flags_IsSystemType | TypeInfo_Flags_None,
    //  75
    L"Microsoft.Advertising.WinRT.UI.AdControl", L"",
    &ActivateType<::Microsoft::Advertising::WinRT::UI::AdControl>, nullptr, nullptr, nullptr,
    67, // Windows.UI.Xaml.Controls.StackPanel
    56, 43, -1, ::Windows::UI::Xaml::Interop::TypeKind::Metadata,
    TypeInfo_Flags_None,
    //  76
    L"Reddit.subPostControlIconTemplateSelector", L"",
    &ActivateType<::Reddit::subPostControlIconTemplateSelector>, nullptr, nullptr, nullptr,
    1, // Object
    66, 43, -1, ::Windows::UI::Xaml::Interop::TypeKind::Custom,
    TypeInfo_Flags_IsLocalType | TypeInfo_Flags_None,
    //  77
    L"Windows.UI.Xaml.Controls.AppBarToggleButton", L"",
    nullptr, nullptr, nullptr, nullptr,
    -1,
    68, 43, -1, ::Windows::UI::Xaml::Interop::TypeKind::Metadata,
    TypeInfo_Flags_IsSystemType | TypeInfo_Flags_None,
    //  78
    L"TreeViewControl.IntegerToIndentationConverter", L"",
    &ActivateType<::TreeViewControl::IntegerToIndentationConverter>, nullptr, nullptr, nullptr,
    1, // Object
    68, 43, -1, ::Windows::UI::Xaml::Interop::TypeKind::Metadata,
    TypeInfo_Flags_None,
    //  79
    L"Windows.UI.Xaml.Controls.DataTemplateSelector", L"",
    nullptr, nullptr, nullptr, nullptr,
    -1,
    68, 43, -1, ::Windows::UI::Xaml::Interop::TypeKind::Metadata,
    TypeInfo_Flags_IsSystemType | TypeInfo_Flags_None,
    //  80
    L"Windows.UI.Xaml.Controls.Primitives.ToggleButton", L"",
    nullptr, nullptr, nullptr, nullptr,
    -1,
    68, 43, -1, ::Windows::UI::Xaml::Interop::TypeKind::Metadata,
    TypeInfo_Flags_IsSystemType | TypeInfo_Flags_None,
    //  81
    L"Windows.Foundation.Collections.IVector`1<account.subpostUWP>", L"",
    nullptr, &CollectionAdd<::Windows::Foundation::Collections::IVector<::account::subpostUWP^>, ::account::subpostUWP^>, nullptr, nullptr,
    -1,
    68, 43, -1, ::Windows::UI::Xaml::Interop::TypeKind::Metadata,
    TypeInfo_Flags_IsReturnTypeStub | TypeInfo_Flags_None,
    //  Last type here is for padding
    L"", L"",
    nullptr, nullptr, nullptr, nullptr,
    -1, 
    68, 43, -1, ::Windows::UI::Xaml::Interop::TypeKind::Custom,
    TypeInfo_Flags_None,
};

const UINT TypeInfoLookup[] = { 
      0,   //   0
      0,   //   1
      0,   //   2
      0,   //   3
      0,   //   4
      0,   //   5
      1,   //   6
      4,   //   7
      5,   //   8
      5,   //   9
      5,   //  10
      5,   //  11
      6,   //  12
      6,   //  13
      6,   //  14
      7,   //  15
     10,   //  16
     12,   //  17
     13,   //  18
     17,   //  19
     22,   //  20
     24,   //  21
     31,   //  22
     34,   //  23
     37,   //  24
     43,   //  25
     46,   //  26
     47,   //  27
     49,   //  28
     52,   //  29
     55,   //  30
     57,   //  31
     59,   //  32
     62,   //  33
     65,   //  34
     66,   //  35
     68,   //  36
     70,   //  37
     73,   //  38
     73,   //  39
     74,   //  40
     76,   //  41
     77,   //  42
     77,   //  43
     78,   //  44
     78,   //  45
     80,   //  46
     80,   //  47
     80,   //  48
     81,   //  49
     81,   //  50
     81,   //  51
     81,   //  52
     81,   //  53
     81,   //  54
     81,   //  55
     81,   //  56
     81,   //  57
     81,   //  58
     81,   //  59
     81,   //  60
     82,   //  61
};

struct EnumValueInfo
{
    PCWSTR name;
    int eValue;
};

const EnumValueInfo EnumValues[] =
{ 
    L"hot", (int) ::account::postSort::hot,
    L"New", (int) ::account::postSort::New,
    L"rising", (int) ::account::postSort::rising,
    L"controversial", (int) ::account::postSort::controversial,
    L"top", (int) ::account::postSort::top,
    L"gilded", (int) ::account::postSort::gilded,
    L"Defaultsort", (int) ::account::postSort::Defaultsort,
    L"hour", (int) ::account::timerange::hour,
    L"day", (int) ::account::timerange::day,
    L"week", (int) ::account::timerange::week,
    L"month", (int) ::account::timerange::month,
    L"year", (int) ::account::timerange::year,
    L"all", (int) ::account::timerange::all,
    L"Default", (int) ::account::timerange::Default,
    L"subpost", (int) ::account::RedditType::subpost,
    L"comment", (int) ::account::RedditType::comment,
    L"subreddit", (int) ::account::RedditType::subreddit,
    L"user", (int) ::account::RedditType::user,
    L"message", (int) ::account::RedditType::message,
    L"best", (int) ::account::commentSort::best,
    L"top", (int) ::account::commentSort::top,
    L"New", (int) ::account::commentSort::New,
    L"controversial", (int) ::account::commentSort::controversial,
    L"old", (int) ::account::commentSort::old,
    L"qa", (int) ::account::commentSort::qa,
    L"random", (int) ::account::commentSort::random,
    L"default", (int) ::account::commentSort::default,
    L"selftype", (int) ::account::postContentType::selftype,
    L"imagetype", (int) ::account::postContentType::imagetype,
    L"linktype", (int) ::account::postContentType::linktype,
    L"giftype", (int) ::account::postContentType::giftype,
    L"videotype", (int) ::account::postContentType::videotype,
    L"adtype", (int) ::account::postContentType::adtype,
    L"ytvideotype", (int) ::account::postContentType::ytvideotype,
    L"albumtype", (int) ::account::postContentType::albumtype,
    L"imgurpending", (int) ::account::postContentType::imgurpending,
    L"none", (int) ::account::postContentType::none,
    L"pending", (int) ::account::postContentType::pending,
    L"admin", (int) ::account::DistinguishedAccountTypes::admin,
    L"mod", (int) ::account::DistinguishedAccountTypes::mod,
    L"op", (int) ::account::DistinguishedAccountTypes::op,
    L"none", (int) ::account::DistinguishedAccountTypes::none,
    L"me", (int) ::account::DistinguishedAccountTypes::me,
};

struct MemberInfo 
{
    PCWSTR shortName;
    ::Platform::Object^ (*getter)(::Platform::Object^);
    void (*setter)(::Platform::Object^, ::Platform::Object^);
    int typeIndex;
    int targetTypeIndex;
    bool isReadOnly;
    bool isDependencyProperty;
    bool isAttachable;
};

const MemberInfo MemberInfos[] = 
{
    //   0 - account.subpostUWP.NSFW
    L"NSFW",
    &GetValueTypeMember_NSFW<::account::subpostUWP, ::Platform::Boolean>,
    nullptr,
    4, // Boolean
    -1,
    true,  false, false,
    //   1 - account.subpostUWP.num_comments
    L"num_comments",
    &GetValueTypeMember_num_comments<::account::subpostUWP, ::default::int32>,
    nullptr,
    0, // Int32
    -1,
    true,  false, false,
    //   2 - account.subpostUWP.subreddit
    L"subreddit",
    &GetReferenceTypeMember_subreddit<::account::subpostUWP>,
    nullptr,
    2, // String
    -1,
    true,  false, false,
    //   3 - account.subpostUWP.self
    L"self",
    &GetValueTypeMember_self<::account::subpostUWP, ::Platform::Boolean>,
    nullptr,
    4, // Boolean
    -1,
    true,  false, false,
    //   4 - account.subpostUWP.link
    L"link",
    &GetReferenceTypeMember_link<::account::subpostUWP>,
    nullptr,
    33, // Windows.Foundation.Uri
    -1,
    true,  false, false,
    //   5 - account.subpostUWP.Title
    L"Title",
    &GetReferenceTypeMember_Title<::account::subpostUWP>,
    nullptr,
    2, // String
    -1,
    true,  false, false,
    //   6 - account.subpostUWP.author
    L"author",
    &GetReferenceTypeMember_author<::account::subpostUWP>,
    nullptr,
    2, // String
    -1,
    true,  false, false,
    //   7 - account.subpostUWP.selftext
    L"selftext",
    &GetReferenceTypeMember_selftext<::account::subpostUWP>,
    nullptr,
    2, // String
    -1,
    true,  false, false,
    //   8 - account.subpostUWP.contentType
    L"contentType",
    &GetValueTypeMember_contentType<::account::subpostUWP, ::account::postContentType>,
    &SetEnumMember_contentType<::account::subpostUWP, ::account::postContentType>,
    36, // account.postContentType
    -1,
    false, false, false,
    //   9 - account.subpostUWP.thumbnail
    L"thumbnail",
    &GetReferenceTypeMember_thumbnail<::account::subpostUWP>,
    nullptr,
    61, // Windows.UI.Xaml.FrameworkElement
    -1,
    true,  false, false,
    //  10 - account.subpostUWP.thumbnailURI
    L"thumbnailURI",
    &GetReferenceTypeMember_thumbnailURI<::account::subpostUWP>,
    nullptr,
    33, // Windows.Foundation.Uri
    -1,
    true,  false, false,
    //  11 - account.subpostUWP.previewURI
    L"previewURI",
    &GetReferenceTypeMember_previewURI<::account::subpostUWP>,
    nullptr,
    33, // Windows.Foundation.Uri
    -1,
    true,  false, false,
    //  12 - account.subpostUWP.changedownvote
    L"changedownvote",
    &GetReferenceTypeMember_changedownvote<::account::subpostUWP>,
    nullptr,
    56, // Windows.UI.Xaml.Input.ICommand
    -1,
    true,  false, false,
    //  13 - account.subpostUWP.changeupvote
    L"changeupvote",
    &GetReferenceTypeMember_changeupvote<::account::subpostUWP>,
    nullptr,
    56, // Windows.UI.Xaml.Input.ICommand
    -1,
    true,  false, false,
    //  14 - account.subpostUWP.previewCommand
    L"previewCommand",
    &GetReferenceTypeMember_previewCommand<::account::subpostUWP>,
    &SetReferenceTypeMember_previewCommand<::account::subpostUWP, ::Windows::UI::Xaml::Input::ICommand>,
    56, // Windows.UI.Xaml.Input.ICommand
    -1,
    false, false, false,
    //  15 - account.subpostUWP.Liked
    L"Liked",
    &GetValueTypeMember_Liked<::account::subpostUWP, ::default::int32>,
    &SetValueTypeMember_Liked<::account::subpostUWP, ::default::int32>,
    0, // Int32
    -1,
    false, false, false,
    //  16 - account.subpostUWP.score
    L"score",
    &GetValueTypeMember_score<::account::subpostUWP, ::default::int32>,
    nullptr,
    0, // Int32
    -1,
    true,  false, false,
    //  17 - account.subpostUWP.saved
    L"saved",
    &GetValueTypeMember_saved<::account::subpostUWP, ::Platform::Boolean>,
    &SetValueTypeMember_saved<::account::subpostUWP, ::Platform::Boolean>,
    4, // Boolean
    -1,
    false, false, false,
    //  18 - account.subpostUWP.Golds
    L"Golds",
    &GetValueTypeMember_Golds<::account::subpostUWP, ::default::uint32>,
    nullptr,
    3, // UInt32
    -1,
    true,  false, false,
    //  19 - account.subpostUWP.DistinguishedAuthorType
    L"DistinguishedAuthorType",
    &GetValueTypeMember_DistinguishedAuthorType<::account::subpostUWP, ::account::DistinguishedAccountTypes>,
    nullptr,
    64, // account.DistinguishedAccountTypes
    -1,
    true,  false, false,
    //  20 - account.subpostUWP.rType
    L"rType",
    &GetValueTypeMember_rType<::account::subpostUWP, ::account::RedditType>,
    nullptr,
    16, // account.RedditType
    -1,
    true,  false, false,
    //  21 - Reddit.reportFlyout.reasonsVec
    L"reasonsVec",
    nullptr,
    &SetReferenceTypeMember_reasonsVec<::Reddit::reportFlyout, ::Platform::Object>,
    1, // Object
    -1,
    false, false, false,
    //  22 - Reddit.reportFlyout.isComment
    L"isComment",
    nullptr,
    &SetValueTypeMember_isComment<::Reddit::reportFlyout, ::Platform::Boolean>,
    4, // Boolean
    -1,
    false, false, false,
    //  23 - Reddit.reportFlyout.subreddit
    L"subreddit",
    &GetReferenceTypeMember_subreddit<::Reddit::reportFlyout>,
    &SetReferenceTypeMember_subreddit<::Reddit::reportFlyout, ::Platform::String>,
    2, // String
    -1,
    false, false, false,
    //  24 - Reddit.EXplaceHolder.post
    L"post",
    nullptr,
    &SetReferenceTypeMember_post<::Reddit::EXplaceHolder, ::account::subpostUWP>,
    14, // account.subpostUWP
    -1,
    false, false, false,
    //  25 - Reddit.EXplaceHolder.contentLoaded
    L"contentLoaded",
    &GetValueTypeMember_contentLoaded<::Reddit::EXplaceHolder, ::Platform::Boolean>,
    nullptr,
    4, // Boolean
    -1,
    true,  false, false,
    //  26 - Reddit.rootWindowGrid.Has_mail
    L"Has_mail",
    &GetValueTypeMember_Has_mail<::Reddit::rootWindowGrid, ::Platform::Boolean>,
    nullptr,
    4, // Boolean
    -1,
    true,  false, false,
    //  27 - Reddit.CommentViewPage.sort
    L"sort",
    &GetValueTypeMember_sort<::Reddit::CommentViewPage, ::account::commentSort>,
    &SetEnumMember_sort<::Reddit::CommentViewPage, ::account::commentSort>,
    19, // account.commentSort
    -1,
    false, false, false,
    //  28 - Reddit.CommentViewPage.subInfo
    L"subInfo",
    &GetValueTypeMember_subInfo<::Reddit::CommentViewPage, ::account::subredditInfo>,
    nullptr,
    25, // account.subredditInfo
    -1,
    true,  false, false,
    //  29 - mdblock.mdRichProperties.MDElements
    L"MDElements",
    &GetAttachableMember_MDElements<::mdblock::mdRichProperties, ::Windows::UI::Xaml::UIElement>,
    &SetAttachableMember_MDElements<::mdblock::mdRichProperties, ::Windows::UI::Xaml::UIElement, ::mdblock::refMDElements^>,
    24, // mdblock.refMDElements
    44, // Windows.UI.Xaml.UIElement
    false, true,  true, 
    //  30 - mdblock.mdRichProperties.MD
    L"MD",
    &GetAttachableMember_MD<::mdblock::mdRichProperties, ::Windows::UI::Xaml::UIElement>,
    &SetAttachableMember_MD<::mdblock::mdRichProperties, ::Windows::UI::Xaml::UIElement, ::Platform::String^>,
    2, // String
    44, // Windows.UI.Xaml.UIElement
    false, true,  true, 
    //  31 - TreeViewControl.TreeView.RootNode
    L"RootNode",
    &GetReferenceTypeMember_RootNode<::TreeViewControl::TreeView>,
    &SetReferenceTypeMember_RootNode<::TreeViewControl::TreeView, ::TreeViewControl::TreeNode>,
    40, // TreeViewControl.TreeNode
    -1,
    false, false, false,
    //  32 - TreeViewControl.TreeNode.Depth
    L"Depth",
    &GetValueTypeMember_Depth<::TreeViewControl::TreeNode, ::default::int32>,
    nullptr,
    0, // Int32
    -1,
    true,  false, false,
    //  33 - TreeViewControl.TreeNode.HasItems
    L"HasItems",
    &GetValueTypeMember_HasItems<::TreeViewControl::TreeNode, ::Platform::Boolean>,
    nullptr,
    4, // Boolean
    -1,
    true,  false, false,
    //  34 - TreeViewControl.TreeNode.IsExpanded
    L"IsExpanded",
    &GetValueTypeMember_IsExpanded<::TreeViewControl::TreeNode, ::Platform::Boolean>,
    &SetValueTypeMember_IsExpanded<::TreeViewControl::TreeNode, ::Platform::Boolean>,
    4, // Boolean
    -1,
    false, false, false,
    //  35 - TreeViewControl.TreeNode.ParentNode
    L"ParentNode",
    &GetReferenceTypeMember_ParentNode<::TreeViewControl::TreeNode>,
    &SetReferenceTypeMember_ParentNode<::TreeViewControl::TreeNode, ::TreeViewControl::TreeNode>,
    40, // TreeViewControl.TreeNode
    -1,
    false, false, false,
    //  36 - TreeViewControl.TreeNode.Data
    L"Data",
    &GetReferenceTypeMember_Data<::TreeViewControl::TreeNode>,
    &SetReferenceTypeMember_Data<::TreeViewControl::TreeNode, ::Platform::Object>,
    1, // Object
    -1,
    false, false, false,
    //  37 - TreeViewControl.TreeNode.Size
    L"Size",
    &GetValueTypeMember_Size<::TreeViewControl::TreeNode, ::default::uint32>,
    nullptr,
    3, // UInt32
    -1,
    true,  false, false,
    //  38 - ExpanderControl.Expander.IsExpanded
    L"IsExpanded",
    &GetValueTypeMember_IsExpanded<::ExpanderControl::Expander, ::Platform::Boolean>,
    &SetValueTypeMember_IsExpanded<::ExpanderControl::Expander, ::Platform::Boolean>,
    4, // Boolean
    -1,
    false, true,  false,
    //  39 - ExpanderControl.Expander.Header
    L"Header",
    &GetReferenceTypeMember_Header<::ExpanderControl::Expander>,
    &SetReferenceTypeMember_Header<::ExpanderControl::Expander, ::Platform::Object>,
    1, // Object
    -1,
    false, true,  false,
    //  40 - ExpanderControl.Expander.HeaderTemplate
    L"HeaderTemplate",
    &GetReferenceTypeMember_HeaderTemplate<::ExpanderControl::Expander>,
    &SetReferenceTypeMember_HeaderTemplate<::ExpanderControl::Expander, ::Windows::UI::Xaml::DataTemplate>,
    50, // Windows.UI.Xaml.DataTemplate
    -1,
    false, true,  false,
    //  41 - Reddit.SubRedditViewPage.Subscribed
    L"Subscribed",
    &GetValueTypeMember_Subscribed<::Reddit::SubRedditViewPage, ::Platform::Boolean>,
    &SetValueTypeMember_Subscribed<::Reddit::SubRedditViewPage, ::Platform::Boolean>,
    4, // Boolean
    -1,
    false, false, false,
    //  42 - Reddit.SubRedditViewPage.Range
    L"Range",
    &GetValueTypeMember_Range<::Reddit::SubRedditViewPage, ::account::timerange>,
    &SetEnumMember_Range<::Reddit::SubRedditViewPage, ::account::timerange>,
    12, // account.timerange
    -1,
    false, false, false,
    //  43 - Reddit.SubRedditViewPage.Sort
    L"Sort",
    &GetValueTypeMember_Sort<::Reddit::SubRedditViewPage, ::account::postSort>,
    &SetEnumMember_Sort<::Reddit::SubRedditViewPage, ::account::postSort>,
    11, // account.postSort
    -1,
    false, false, false,
    //  44 - Reddit.SubRedditViewPage.Subreddit
    L"Subreddit",
    &GetReferenceTypeMember_Subreddit<::Reddit::SubRedditViewPage>,
    nullptr,
    2, // String
    -1,
    true,  false, false,
    //  45 - Reddit.SubRedditViewPage.viewMode
    L"viewMode",
    &GetValueTypeMember_viewMode<::Reddit::SubRedditViewPage, ::Platform::Boolean>,
    &SetValueTypeMember_viewMode<::Reddit::SubRedditViewPage, ::Platform::Boolean>,
    4, // Boolean
    -1,
    false, false, false,
    //  46 - Reddit.SubRedditViewPage.subInfo
    L"subInfo",
    &GetValueTypeMember_subInfo<::Reddit::SubRedditViewPage, ::account::subredditInfo>,
    nullptr,
    25, // account.subredditInfo
    -1,
    true,  false, false,
    //  47 - Reddit.SubRedditViewPage.posts
    L"posts",
    &GetReferenceTypeMember_posts<::Reddit::SubRedditViewPage>,
    nullptr,
    81, // Windows.Foundation.Collections.IVector`1<account.subpostUWP>
    -1,
    true,  false, false,
    //  48 - Reddit.SubRedditViewPage.SidebarUseCSS
    L"SidebarUseCSS",
    &GetValueTypeMember_SidebarUseCSS<::Reddit::SubRedditViewPage, ::Platform::Boolean>,
    &SetValueTypeMember_SidebarUseCSS<::Reddit::SubRedditViewPage, ::Platform::Boolean>,
    4, // Boolean
    -1,
    false, false, false,
    //  49 - Reddit.MixedContentSelector.CommentDataTemplate
    L"CommentDataTemplate",
    &GetReferenceTypeMember_CommentDataTemplate<::Reddit::MixedContentSelector>,
    &SetReferenceTypeMember_CommentDataTemplate<::Reddit::MixedContentSelector, ::Windows::UI::Xaml::DataTemplate>,
    50, // Windows.UI.Xaml.DataTemplate
    -1,
    false, false, false,
    //  50 - Reddit.MixedContentSelector.SubPostDataTemplate
    L"SubPostDataTemplate",
    &GetReferenceTypeMember_SubPostDataTemplate<::Reddit::MixedContentSelector>,
    &SetReferenceTypeMember_SubPostDataTemplate<::Reddit::MixedContentSelector, ::Windows::UI::Xaml::DataTemplate>,
    50, // Windows.UI.Xaml.DataTemplate
    -1,
    false, false, false,
    //  51 - mdblock.MDFullEnhancedEditor.Box
    L"Box",
    &GetReferenceTypeMember_Box<::mdblock::MDFullEnhancedEditor>,
    nullptr,
    28, // mdblock.mdEnhancedBox
    -1,
    true,  false, false,
    //  52 - Reddit.comboboxTemplateSelector.listTemplate
    L"listTemplate",
    &GetReferenceTypeMember_listTemplate<::Reddit::comboboxTemplateSelector>,
    &SetReferenceTypeMember_listTemplate<::Reddit::comboboxTemplateSelector, ::Windows::UI::Xaml::DataTemplate>,
    50, // Windows.UI.Xaml.DataTemplate
    -1,
    false, false, false,
    //  53 - Reddit.comboboxTemplateSelector.closedTemplate
    L"closedTemplate",
    &GetReferenceTypeMember_closedTemplate<::Reddit::comboboxTemplateSelector>,
    &SetReferenceTypeMember_closedTemplate<::Reddit::comboboxTemplateSelector, ::Windows::UI::Xaml::DataTemplate>,
    50, // Windows.UI.Xaml.DataTemplate
    -1,
    false, false, false,
    //  54 - Reddit.comboboxTemplateSelector.nullTemplate
    L"nullTemplate",
    &GetReferenceTypeMember_nullTemplate<::Reddit::comboboxTemplateSelector>,
    &SetReferenceTypeMember_nullTemplate<::Reddit::comboboxTemplateSelector, ::Windows::UI::Xaml::DataTemplate>,
    50, // Windows.UI.Xaml.DataTemplate
    -1,
    false, false, false,
    //  55 - Reddit.AppBarToggleColoredButton.CheckedBrush
    L"CheckedBrush",
    &GetReferenceTypeMember_CheckedBrush<::Reddit::AppBarToggleColoredButton>,
    &SetReferenceTypeMember_CheckedBrush<::Reddit::AppBarToggleColoredButton, ::Windows::UI::Xaml::Media::Brush>,
    47, // Windows.UI.Xaml.Media.Brush
    -1,
    false, true,  false,
    //  56 - Microsoft.Advertising.WinRT.UI.AdControl.ApplicationId
    L"ApplicationId",
    &GetReferenceTypeMember_ApplicationId<::Microsoft::Advertising::WinRT::UI::AdControl>,
    &SetReferenceTypeMember_ApplicationId<::Microsoft::Advertising::WinRT::UI::AdControl, ::Platform::String>,
    2, // String
    -1,
    false, false, false,
    //  57 - Microsoft.Advertising.WinRT.UI.AdControl.AdUnitId
    L"AdUnitId",
    &GetReferenceTypeMember_AdUnitId<::Microsoft::Advertising::WinRT::UI::AdControl>,
    &SetReferenceTypeMember_AdUnitId<::Microsoft::Advertising::WinRT::UI::AdControl, ::Platform::String>,
    2, // String
    -1,
    false, false, false,
    //  58 - Microsoft.Advertising.WinRT.UI.AdControl.HasAd
    L"HasAd",
    &GetValueTypeMember_HasAd<::Microsoft::Advertising::WinRT::UI::AdControl, ::Platform::Boolean>,
    nullptr,
    4, // Boolean
    -1,
    true,  false, false,
    //  59 - Microsoft.Advertising.WinRT.UI.AdControl.IsSuspended
    L"IsSuspended",
    &GetValueTypeMember_IsSuspended<::Microsoft::Advertising::WinRT::UI::AdControl, ::Platform::Boolean>,
    nullptr,
    4, // Boolean
    -1,
    true,  false, false,
    //  60 - Microsoft.Advertising.WinRT.UI.AdControl.PostalCode
    L"PostalCode",
    &GetReferenceTypeMember_PostalCode<::Microsoft::Advertising::WinRT::UI::AdControl>,
    &SetReferenceTypeMember_PostalCode<::Microsoft::Advertising::WinRT::UI::AdControl, ::Platform::String>,
    2, // String
    -1,
    false, false, false,
    //  61 - Microsoft.Advertising.WinRT.UI.AdControl.CountryOrRegion
    L"CountryOrRegion",
    &GetReferenceTypeMember_CountryOrRegion<::Microsoft::Advertising::WinRT::UI::AdControl>,
    &SetReferenceTypeMember_CountryOrRegion<::Microsoft::Advertising::WinRT::UI::AdControl, ::Platform::String>,
    2, // String
    -1,
    false, false, false,
    //  62 - Microsoft.Advertising.WinRT.UI.AdControl.Keywords
    L"Keywords",
    &GetReferenceTypeMember_Keywords<::Microsoft::Advertising::WinRT::UI::AdControl>,
    &SetReferenceTypeMember_Keywords<::Microsoft::Advertising::WinRT::UI::AdControl, ::Platform::String>,
    2, // String
    -1,
    false, false, false,
    //  63 - Microsoft.Advertising.WinRT.UI.AdControl.AutoRefreshIntervalInSeconds
    L"AutoRefreshIntervalInSeconds",
    &GetValueTypeMember_AutoRefreshIntervalInSeconds<::Microsoft::Advertising::WinRT::UI::AdControl, ::default::int32>,
    &SetValueTypeMember_AutoRefreshIntervalInSeconds<::Microsoft::Advertising::WinRT::UI::AdControl, ::default::int32>,
    0, // Int32
    -1,
    false, false, false,
    //  64 - Microsoft.Advertising.WinRT.UI.AdControl.IsAutoRefreshEnabled
    L"IsAutoRefreshEnabled",
    &GetValueTypeMember_IsAutoRefreshEnabled<::Microsoft::Advertising::WinRT::UI::AdControl, ::Platform::Boolean>,
    &SetValueTypeMember_IsAutoRefreshEnabled<::Microsoft::Advertising::WinRT::UI::AdControl, ::Platform::Boolean>,
    4, // Boolean
    -1,
    false, false, false,
    //  65 - Microsoft.Advertising.WinRT.UI.AdControl.IsEngaged
    L"IsEngaged",
    &GetValueTypeMember_IsEngaged<::Microsoft::Advertising::WinRT::UI::AdControl, ::Platform::Boolean>,
    nullptr,
    4, // Boolean
    -1,
    true,  false, false,
    //  66 - Reddit.subPostControlIconTemplateSelector.selfTemplate
    L"selfTemplate",
    &GetReferenceTypeMember_selfTemplate<::Reddit::subPostControlIconTemplateSelector>,
    &SetReferenceTypeMember_selfTemplate<::Reddit::subPostControlIconTemplateSelector, ::Windows::UI::Xaml::Controls::ControlTemplate>,
    74, // Windows.UI.Xaml.Controls.ControlTemplate
    -1,
    false, false, false,
    //  67 - Reddit.subPostControlIconTemplateSelector.thumbnailTemplate
    L"thumbnailTemplate",
    &GetReferenceTypeMember_thumbnailTemplate<::Reddit::subPostControlIconTemplateSelector>,
    &SetReferenceTypeMember_thumbnailTemplate<::Reddit::subPostControlIconTemplateSelector, ::Windows::UI::Xaml::Controls::ControlTemplate>,
    74, // Windows.UI.Xaml.Controls.ControlTemplate
    -1,
    false, false, false,
};

PCWSTR GetShortName(PCWSTR longName)
{
    PCWSTR separator = wcsrchr(longName, '.');
    return separator != nullptr ? separator + 1: longName;
}

const TypeInfo* GetTypeInfo(::Platform::String^ typeName)
{
    auto typeNameLength = typeName->Length();
    if (typeNameLength < _countof(TypeInfoLookup) - 1)
    {
        for (UINT i = TypeInfoLookup[typeNameLength]; i < TypeInfoLookup[typeNameLength+1]; i++)
        {
            if (typeName == ::Platform::StringReference(TypeInfos[i].typeName))
            {
                return &TypeInfos[i];
            }
        }
    }
    return nullptr;
}

const MemberInfo* GetMemberInfo(::Platform::String^ longMemberName)
{
    auto lastDotIndex = longMemberName->Length();
    while (true)
    {
        if (longMemberName->Data()[lastDotIndex] == '.')
        {
            const TypeInfo* pTypeInfo = GetTypeInfo(ref new ::Platform::String(longMemberName->Data(), lastDotIndex));
            const TypeInfo* pNextTypeInfo = pTypeInfo + 1;
            if (pTypeInfo)
            {
                PCWSTR shortMemberName = GetShortName(longMemberName->Data());
                for (int i = pTypeInfo->firstMemberIndex; i < pNextTypeInfo->firstMemberIndex; i++)
                {
                    if (wcscmp(shortMemberName, MemberInfos[i].shortName) == 0)
                    {
                        return &MemberInfos[i];
                    }
                }
            }
            break;
        }
        if (lastDotIndex == 0)
        {
            break;
        }
        lastDotIndex--;
    }
    return nullptr;
}

::Platform::Collections::Vector<::Windows::UI::Xaml::Markup::IXamlMetadataProvider^>^ ::XamlTypeInfo::InfoProvider::XamlTypeInfoProvider::OtherProviders::get()
{
    if(_otherProviders == nullptr)
    {
        auto otherProviders = ref new ::Platform::Collections::Vector<::Windows::UI::Xaml::Markup::IXamlMetadataProvider^>();
        ::Windows::UI::Xaml::Markup::IXamlMetadataProvider^ provider;
        provider = ref new ::Microsoft::Advertising::MicrosoftAdvertising_XamlTypeInfo::XamlMetaDataProvider();
        otherProviders->Append(provider); 
        provider = ref new ::ExpanderControl::ExpanderControl_XamlTypeInfo::XamlMetaDataProvider();
        otherProviders->Append(provider); 
        provider = ref new ::mdblock::mdblock_XamlTypeInfo::XamlMetaDataProvider();
        otherProviders->Append(provider); 
        _otherProviders = otherProviders;
    }
    return _otherProviders;
}

::Windows::UI::Xaml::Markup::IXamlType^ ::XamlTypeInfo::InfoProvider::XamlTypeInfoProvider::CreateXamlType(::Platform::String^ typeName)
{
    const TypeInfo* pTypeInfo = GetTypeInfo(typeName);
    const TypeInfo* pNextTypeInfo = pTypeInfo + 1;
    if (pTypeInfo == nullptr || pNextTypeInfo == nullptr)
    {
        return nullptr;
    }
    else if (pTypeInfo->flags & TypeInfo_Flags_IsSystemType)
    {
        return ref new ::XamlTypeInfo::InfoProvider::XamlSystemBaseType(typeName);
    }
    else
    {
        ::XamlTypeInfo::InfoProvider::XamlUserType^ userType = ref new ::XamlTypeInfo::InfoProvider::XamlUserType(
            this, 
            ::Platform::StringReference(pTypeInfo->typeName), 
            this->GetXamlTypeByName(::Platform::StringReference(pTypeInfo->baseTypeIndex >= 0 ? TypeInfos[pTypeInfo->baseTypeIndex].typeName : L"")));
        userType->KindOfType = pTypeInfo->kindofType;
        userType->Activator = pTypeInfo->activator;
        userType->CollectionAdd = pTypeInfo->collectionAdd;
        userType->DictionaryAdd = pTypeInfo->dictionaryAdd;
        userType->FromStringConverter = pTypeInfo->fromStringConverter;
        userType->ContentPropertyName = ::Platform::StringReference(pTypeInfo->contentPropertyName);
        userType->IsLocalType = pTypeInfo->flags & TypeInfo_Flags_IsLocalType;
        userType->IsReturnTypeStub = pTypeInfo->flags & TypeInfo_Flags_IsReturnTypeStub;
        userType->IsBindable = pTypeInfo->flags & TypeInfo_Flags_IsBindable;
        userType->IsMarkupExtension = pTypeInfo->flags & TypeInfo_Flags_IsMarkupExtension;
        userType->CreateFromStringMethod = nullptr;
        int nextMemberIndex = pTypeInfo->firstMemberIndex;
        for (int i=pTypeInfo->firstMemberIndex; i < pNextTypeInfo->firstMemberIndex; i++)
        {
            userType->AddMemberName(::Platform::StringReference(MemberInfos[i].shortName));
            nextMemberIndex++;
        }
        for (int i = pTypeInfo->firstEnumValueIndex; i < pNextTypeInfo->firstEnumValueIndex; i++)
        {
            userType->AddEnumValue(
                ::Platform::StringReference(EnumValues[i].name),
                ::Windows::Foundation::PropertyValue::CreateInt32(EnumValues[i].eValue));
        }
        return userType;
    }
}

::Windows::UI::Xaml::Markup::IXamlMember^ ::XamlTypeInfo::InfoProvider::XamlTypeInfoProvider::CreateXamlMember(::Platform::String^ longMemberName)
{
    ::XamlTypeInfo::InfoProvider::XamlMember^ xamlMember = nullptr;
    const MemberInfo* pMemberInfo = GetMemberInfo(longMemberName);
    if (pMemberInfo != nullptr)
    {
        xamlMember = ref new ::XamlTypeInfo::InfoProvider::XamlMember(
            this,
            ::Platform::StringReference(pMemberInfo->shortName),
            ::Platform::StringReference(TypeInfos[pMemberInfo->typeIndex].typeName));
        xamlMember->Getter = pMemberInfo->getter;
        xamlMember->Setter = pMemberInfo->setter;
        xamlMember->TargetTypeName = pMemberInfo->targetTypeIndex >= 0 ? ::Platform::StringReference(TypeInfos[pMemberInfo->targetTypeIndex].typeName) : L"";
        xamlMember->IsReadOnly = pMemberInfo->isReadOnly;
        xamlMember->IsDependencyProperty = pMemberInfo->isDependencyProperty;
        xamlMember->IsAttachable = pMemberInfo->isAttachable;
    }
    return xamlMember;
}

